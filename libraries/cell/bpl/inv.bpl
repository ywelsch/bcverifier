//( forall o1,o2:Ref :: isOfType(o1, heap1, $cell.Cell) && isOfType(o2, heap2, $cell.Cell) && related[o1,o2] && int2bool(heap2[o2,$cell.Cell.f]) ==> RelNull(heap1[o1,$cell.Cell.c], heap2[o2,$cell.Cell.c1], related) )
//( forall o1,o2:Ref :: isOfType(o1, heap1, $cell.Cell) && isOfType(o2, heap2, $cell.Cell) && related[o1,o2] && !int2bool(heap2[o2,$cell.Cell.f]) ==> RelNull(heap1[o1, $cell.Cell.c], heap2[o2,$cell.Cell.c2], related) )
isOfType(stack1[0][param0_r], heap1, $cell.Cell) && isOfType(stack2[0][param0_r], heap2, $cell.Cell) && related[stack1[0][param0_r],stack2[0][param0_r]] && int2bool(heap2[stack2[0][param0_r],$cell.Cell.f]) ==> RelNull(heap1[stack1[0][param0_r],$cell.Cell.c], heap2[stack2[0][param0_r],$cell.Cell.c1], related)
isOfType(stack1[0][param0_r], heap1, $cell.Cell) && isOfType(stack2[0][param0_r], heap2, $cell.Cell) && related[stack1[0][param0_r],stack2[0][param0_r]] && !int2bool(heap2[stack2[0][param0_r],$cell.Cell.f]) ==> RelNull(heap1[stack1[0][param0_r],$cell.Cell.c], heap2[stack2[0][param0_r],$cell.Cell.c2], related)