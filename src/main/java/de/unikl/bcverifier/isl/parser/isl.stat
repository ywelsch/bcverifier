// This file was generated by Beaver v0.9.6.1

1:	EOF: REDUCE opt$lst$expr = 
	FORALL: SHIFT; goto 5
	TRUE: SHIFT; goto 10
	FALSE: SHIFT; goto 11
	INVALIDTOKEN: SHIFT; goto 12
	expr: SHIFT; goto 27
	lst$expr: SHIFT; goto 3
	opt$lst$expr: SHIFT; goto 2
	cu: ACCEPT
2:	EOF: REDUCE cu = opt$lst$expr.e
3:	EOF: REDUCE opt$lst$expr = lst$expr
	FORALL: SHIFT; goto 5
	TRUE: SHIFT; goto 10
	FALSE: SHIFT; goto 11
	INVALIDTOKEN: SHIFT; goto 12
	expr: SHIFT; goto 4
4:	EOF: REDUCE lst$expr = lst$expr expr
	FORALL: REDUCE lst$expr = lst$expr expr
	TRUE: REDUCE lst$expr = lst$expr expr
	FALSE: REDUCE lst$expr = lst$expr expr
	INVALIDTOKEN: REDUCE lst$expr = lst$expr expr
5:	IDENTIFIER: SHIFT; goto 18
	OLD: SHIFT; goto 19
	NEW: SHIFT; goto 24
	id: SHIFT; goto 21
	idlist: SHIFT; goto 26
	vardefs: SHIFT; goto 6
	vardef: SHIFT; goto 13
	typedef: SHIFT; goto 16
6:	LBRACKET: SHIFT; goto 7
7:	FORALL: SHIFT; goto 5
	TRUE: SHIFT; goto 10
	FALSE: SHIFT; goto 11
	INVALIDTOKEN: SHIFT; goto 12
	expr: SHIFT; goto 8
8:	RBRACKET: SHIFT; goto 9
9:	EOF: REDUCE expr = FORALL vardefs.v LBRACKET expr.e RBRACKET
	FORALL: REDUCE expr = FORALL vardefs.v LBRACKET expr.e RBRACKET
	TRUE: REDUCE expr = FORALL vardefs.v LBRACKET expr.e RBRACKET
	FALSE: REDUCE expr = FORALL vardefs.v LBRACKET expr.e RBRACKET
	INVALIDTOKEN: REDUCE expr = FORALL vardefs.v LBRACKET expr.e RBRACKET
	RBRACKET: REDUCE expr = FORALL vardefs.v LBRACKET expr.e RBRACKET
10:	EOF: REDUCE expr = TRUE
	FORALL: REDUCE expr = TRUE
	TRUE: REDUCE expr = TRUE
	FALSE: REDUCE expr = TRUE
	INVALIDTOKEN: REDUCE expr = TRUE
	RBRACKET: REDUCE expr = TRUE
11:	EOF: REDUCE expr = FALSE
	FORALL: REDUCE expr = FALSE
	TRUE: REDUCE expr = FALSE
	FALSE: REDUCE expr = FALSE
	INVALIDTOKEN: REDUCE expr = FALSE
	RBRACKET: REDUCE expr = FALSE
12:	EOF: REDUCE expr = INVALIDTOKEN.i
	FORALL: REDUCE expr = INVALIDTOKEN.i
	TRUE: REDUCE expr = INVALIDTOKEN.i
	FALSE: REDUCE expr = INVALIDTOKEN.i
	INVALIDTOKEN: REDUCE expr = INVALIDTOKEN.i
	RBRACKET: REDUCE expr = INVALIDTOKEN.i
13:	LBRACKET: REDUCE vardefs = vardef.v
	COMMA: SHIFT; goto 14
14:	IDENTIFIER: SHIFT; goto 18
	OLD: SHIFT; goto 19
	NEW: SHIFT; goto 24
	id: SHIFT; goto 21
	idlist: SHIFT; goto 26
	vardefs: SHIFT; goto 15
	vardef: SHIFT; goto 13
	typedef: SHIFT; goto 16
15:	LBRACKET: REDUCE vardefs = vardef.v COMMA vardefs.vs
16:	IDENTIFIER: SHIFT; goto 18
	id: SHIFT; goto 17
17:	LBRACKET: REDUCE vardef = typedef.t id.n
	COMMA: REDUCE vardef = typedef.t id.n
18:	IDENTIFIER: REDUCE id = IDENTIFIER.i
	LBRACKET: REDUCE id = IDENTIFIER.i
	COMMA: REDUCE id = IDENTIFIER.i
	DOT: REDUCE id = IDENTIFIER.i
19:	IDENTIFIER: SHIFT; goto 18
	id: SHIFT; goto 21
	idlist: SHIFT; goto 20
20:	IDENTIFIER: REDUCE typedef = OLD idlist.n
21:	IDENTIFIER: REDUCE idlist = id.i
	DOT: SHIFT; goto 22
22:	IDENTIFIER: SHIFT; goto 18
	id: SHIFT; goto 21
	idlist: SHIFT; goto 23
23:	IDENTIFIER: REDUCE idlist = id.i DOT idlist.is
24:	IDENTIFIER: SHIFT; goto 18
	id: SHIFT; goto 21
	idlist: SHIFT; goto 25
25:	IDENTIFIER: REDUCE typedef = NEW idlist.n
26:	IDENTIFIER: REDUCE typedef = idlist.n
27:	EOF: REDUCE lst$expr = expr
	FORALL: REDUCE lst$expr = expr
	TRUE: REDUCE lst$expr = expr
	FALSE: REDUCE lst$expr = expr
	INVALIDTOKEN: REDUCE lst$expr = expr
